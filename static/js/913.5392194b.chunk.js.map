{"version":3,"file":"static/js/913.5392194b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieSearch/SearchBar/searchBar.module.css?8892","components/MovieSearch/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieList/movieList.module.css?2481","components/MovieSearch/MovieList/MovieList.jsx","components/MovieSearch/MovieSearch.jsx","pages/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"searchBar_searchbar__BzzmD\",\"form\":\"searchBar_form__xOPHl\",\"input\":\"searchBar_input__c-W+z\",\"button\":\"searchBar_button__6rPQm\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport styles from './searchBar.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [search, setSearch] = useState('');\n\n  const handleChangeQuery = event => {\n    setSearch(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (search.trim() === '') {\n      toast.info('Please enter your query!');\n      return;\n    }\n\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <button type=\"submit\" className={styles.button}></button>\n        <input\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChangeQuery}\n          className={styles.input}\n          placeholder=\"Enter movie name...\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movieList_list__slA41\",\"item\":\"movieList_item__FcRrj\",\"link\":\"movieList_link__8UDJP\",\"gallery\":\"movieList_gallery__otTdG\",\"image\":\"movieList_image__KgSa9\"};","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport no_image from './no_image.jpg';\n\nimport styles from '../MovieList/movieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const element = movies.map(movie => (\n    <li key={movie.id} className={styles.item}>\n      <Link\n        state={{ from: location }}\n        className={styles.link}\n        to={`/movies/${movie.id}`}\n      >\n        {movie.poster_path ? (\n          <img\n            className={styles.image}\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n        ) : (\n          <img className={styles.image} src={no_image} alt={movie.title} />\n        )}\n      </Link>\n      <p className={styles.movieTitle}>{movie.title}</p>\n    </li>\n  ));\n  return (\n    <div className={styles.list}>\n      <ul className={styles.gallery}>{element}</ul>\n    </div>\n  );\n};\n\nexport default memo(MoviesList);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMoviesKey } from '../../services/themoviedbAPI';\n\nimport SearchBar from './SearchBar';\nimport MoviesList from '../../components/MovieSearch/MovieList';\n\nimport Loader from '../../components/Loader';\n\nconst MoviesPage = () => {\n  const [data, setData] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  const page = searchParams.get('page');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const newData = await searchMoviesKey(page, query);\n        setData(...newData);\n      } catch (err) {}\n    };\n    if (query) {\n      fetchPosts();\n      return;\n    }\n  }, [query, page]);\n\n  const changeSearch = query => setSearchParams({ query, page: 1 });\n\n  const { error, movies, loading } = data;\n\n  return (\n    <>\n      <SearchBar onSubmit={changeSearch} />\n\n      {query && Boolean(movies.length) && (\n        <MoviesList movies={movies} location={location} />\n      )}\n\n      {!movies.length && query && !loading && !error && (\n        <p>По запросу {query} ничего не найдено</p>\n      )}\n\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import MovieSearch from '../../components/MovieSearch';\n\nconst MoviesPage = () => {\n  return (\n    <>\n      <MovieSearch />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["SearchBar","onSubmit","useState","search","setSearch","className","styles","event","preventDefault","trim","toast","type","value","autoComplete","autoFocus","onChange","target","toLowerCase","placeholder","MoviesList","movies","location","useLocation","element","map","movie","state","from","to","id","poster_path","src","alt","title","no_image","memo","loading","error","data","setData","useSearchParams","searchParams","setSearchParams","query","get","page","useEffect","fetchPosts","searchMoviesKey","newData","Boolean","length","Loader","MovieSearch","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}