{"version":3,"file":"static/js/918.c2105aa9.chunk.js","mappings":"qQACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAsF,sBAAtF,EAAmH,mBAAnH,EAAkJ,wB,SC4ClJ,EAtCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEIC,EAAAA,EAAAA,IAAiBJ,GAFrB,gBAEXK,EAFW,EAEXA,KACRN,EAAUM,GAHS,yGAAH,qDAOpBF,MACC,CAACH,IAEJ,IAAMM,EAAWR,EAAOS,KAAI,SAAAC,GAAK,OAC/B,gBAAIC,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cACxCC,EAENC,IAAKN,EAAMO,iBAEb,eAAIN,UAAWC,EAAf,SAA6BF,EAAMO,iBACnC,cAAGN,UAAWC,EAAd,SAAiCF,EAAMQ,cAXJR,EAAMS,OAe7C,OACE,+BACE,eAAIR,UAAWC,EAAf,SAA6BJ,Q,gMCtC7BY,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAT,sBAAoC,CACzDJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBC,EAAe,mCAAG,6GAAOH,EAAP,+BAAc,EAAGI,EAAjB,gCACNV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAAA,EACAJ,KAAAA,KAJyB,uBACrBE,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,qDAUfG,EAAgB,mCAAG,WAAM7B,GAAN,yFACPkB,EAASO,IAAT,iBAAuBzB,IADhB,uBACtB0B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBtB,EAAgB,mCAAG,WAAMJ,GAAN,yFACPkB,EAASO,IAAT,iBAAuBzB,EAAvB,aADO,uBACtB0B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBI,EAAc,mCAAG,WAAM9B,GAAN,yFACLkB,EAASO,IAAT,iBAAuBzB,EAAvB,aADK,uBACpB0B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/cast.module.css?3847","pages/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"cast_cast__yr0nT\",\"castItem\":\"cast_castItem__dQu6r\",\"castImg\":\"cast_castImg__iDKGQ\",\"name\":\"cast_name__NFLTM\",\"character\":\"cast_character__BxVqB\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredits } from '../../services/themoviedbAPI';\nimport defAvatar from './defAvatar.png';\n\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await getMoviesCredits(movieId);\n        setActors(cast);\n      } catch (err) {}\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  const castList = actors.map(actor => (\n    <li className={styles.castItem} key={actor.id}>\n      <img\n        className={styles.castImg}\n        src={\n          actor.profile_path\n            ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n            : defAvatar\n        }\n        alt={actor.original_name}\n      />\n      <h4 className={styles.name}>{actor.original_name}</h4>\n      <p className={styles.character}>{actor.character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.cast}>{castList}</ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '330d8d8c24db83f5c7c344addef5e20a',\n  },\n});\n\nexport const getFavoriteMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/day`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const searchMoviesKey = async (page = 1, query) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCast","getMoviesCredits","cast","castList","map","actor","className","styles","src","profile_path","defAvatar","alt","original_name","character","id","instance","axios","baseURL","params","api_key","getFavoriteMovies","page","get","data","searchMoviesKey","query","getDetailsMovies","getMovieReview"],"sourceRoot":""}